name: saveweb Images CI

on:
  push:
    branches:
    - 'master'
    paths:
    - '.github/workflows/saveweb.yml'
    - 'saveweb/**'
  schedule:
  - cron: "30 1 * * *"
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/saveweb

jobs:
  chouti:
    name: chouti
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
           - tag: saveweb:chouti-amd
             dockerfile: "./Dockerfile.chouti"
             platforms: linux/amd64
           - tag: saveweb:chouti-arm
             dockerfile: "./Dockerfile.chouti"
             platforms: linux/arm64
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:saveweb"
          push: true
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha,scope=${{ matrix.platforms }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platforms }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/chouti-digests/
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/chouti-digests/${digest#sha256:}"          

          platform=${{ matrix.platforms }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: chouti-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/chouti-digests/*
          if-no-files-found: error
          retention-days: 1

  chouti-multiarch:
    runs-on: ubuntu-latest
    needs:
      - chouti
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/chouti-digests/
          pattern: chouti-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/chouti-digests/
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }}:chouti \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:chouti

  huashijie:
    name: huashijie
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
           - tag: saveweb:huashijie-amd
             dockerfile: "./Dockerfile.huashijie"
             platforms: linux/amd64
           - tag: saveweb:huashijie-arm
             dockerfile: "./Dockerfile.huashijie"
             platforms: linux/arm64
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:saveweb"
          push: true
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha,scope=${{ matrix.platforms }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platforms }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/huashijie-digests/
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/huashijie-digests/${digest#sha256:}"          

          platform=${{ matrix.platforms }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: huashijie-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/huashijie-digests/*
          if-no-files-found: error
          retention-days: 1

  huashijie-multiarch:
    runs-on: ubuntu-latest
    needs:
      - huashijie
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/huashijie-digests/
          pattern: huashijie-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/huashijie-digests/
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }}:huashijie \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:huashijie

  lowapk-v2:
    name: lowapk-v2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
           - tag: saveweb:lowapk-v2-amd
             dockerfile: "./Dockerfile.lowapk_v2"
             platforms: linux/amd64
           - tag: saveweb:lowapk-v2-arm
             dockerfile: "./Dockerfile.lowapk_v2"
             platforms: linux/arm64
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:saveweb"
          push: true
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha,scope=${{ matrix.platforms }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platforms }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/lowapk-v2-digests/
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/lowapk-v2-digests/${digest#sha256:}"          

          platform=${{ matrix.platforms }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: lowapk-v2-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/lowapk-v2-digests/*
          if-no-files-found: error
          retention-days: 1

  lowapk-v2-multiarch:
    runs-on: ubuntu-latest
    needs:
      - lowapk-v2
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/lowapk-v2-digests/
          pattern: lowapk-v2-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/lowapk-v2-digests/
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }}:lowapk-v2 \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:lowapk-v2
